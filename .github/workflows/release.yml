# **what?**
# Take the given commit, run unit tests specifically on that sha, build and
# package it, and then release to GitHub and PyPi with that specific build

# **why?**
# Ensure an automated and tested release process

# **when?**
# This will only run manually with a given sha, version, and changelog_path

name: Release to GitHub and PyPi

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "The last commit sha in the release"
        required: true
      version_number:
        description: "The release version number (i.e. 1.0.0b1)"
        required: true
      changelog_path:
        description: "Path to changes log"
        type: string
        default: "./CHANGELOG.md"
        required: false
      build_script_path:
        description: "Build script path"
        type: string
        default: "scripts/build-dist.sh"
        required: true
      s3_bucket_name:
        description: "AWS S3 bucket name"
        type: string
        default: "core-team-artifacts"
        required: true
      package_test_command:
        description: "Package test command"
        type: string
        default: "dbt --version"
        required: true
      audit_version_changelog:
        description: "Check version changelog"
        type: boolean
        default: false
        required: false
      check_build_exists:
        description: "Check build exists"
        type: boolean
        default: false
        required: false
      upload_artifacts_aws:
        description: "Upload build to AWS"
        required: false
        default: false
        type: boolean
      test_run:
        description: "Test run (Publish release as draft)"
        type: boolean
        default: false
        required: false

permissions:
  contents: write # this is the permission that allows creating a new release

defaults:
  run:
    shell: bash

jobs:
  log-inputs:
    name: Log Inputs
    runs-on: ubuntu-latest
    steps:
      - name: "[DEBUG] Print Variables"
        run: |
          echo The last commit sha in the release: ${{ inputs.sha }}
          echo The release version number:         ${{ inputs.version_number }}
          echo Expected Changlog path:             ${{ inputs.changelog_path }}
          echo Build script path:                  ${{ inputs.build_script_path }}
          echo AWS S3 bucket name:                 ${{ inputs.s3_bucket_name }}
          echo Package test command:               ${{ inputs.package_test_command }}
          echo Check version changelog:            ${{ inputs.audit_version_changelog }}
          echo Check build exists:                 ${{ inputs.check_build_exists }}
          echo Upload build to AWS:                ${{ inputs.upload_artifacts_aws  }}
          echo Test run:                           ${{ inputs.test_run }}

  build-test-package:
    name: Build, Test, Package

    uses: dbt-labs/dbt-release/.github/workflows/build.yml@users/alexander-smolyakov/update-build-workflow

    with:
      sha: ${{ inputs.sha }}
      version_number: ${{ inputs.version_number }}
      changelog_path: ${{ inputs.changelog_path }}
      build_script_path: ${{ inputs.build_script_path }}
      s3_bucket_name: ${{ inputs.s3_bucket_name }}
      package_test_command: ${{ inputs.package_test_command }}
      audit_version_changelog: ${{ inputs.audit_version_changelog }}
      check_build_exists: ${{ inputs.check_build_exists }}
      upload_artifacts_aws: ${{ inputs.upload_artifacts_aws }}

    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

  github-release:
    name: GitHub Release
    if: ${{ !failure() && !cancelled() }}

    needs: build-test-package

    uses: dbt-labs/dbt-release/.github/workflows/github-release.yml@main

    with:
      sha: ${{ inputs.sha }}
      version_number: ${{ inputs.version_number }}
      changelog_path: ${{ inputs.changelog_path }}
      test_run: ${{ inputs.test_run }}

  pypi-release:
    if: ${{ !inputs.test_run }}

    name: Pypi Release

    runs-on: ubuntu-latest

    needs: github-release

    environment: PypiProd

    steps:
      - name: "Download Build Artifact - ${{ inputs.version_number }}"
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.version_number }}
          path: "dist"

      - name: "Publish Distribution To Pypi"
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
